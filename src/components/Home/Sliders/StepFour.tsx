"use client";
import React, { useRef, useState } from "react";
import { useReactToPrint } from "react-to-print";
import RefererPrint from "../RefererPrint";
import PrescriptionPrint from "../PrescriptionPrint";
import { useTabs } from "@/components/common/TabsLayout/hooks/use-tabs";
import { Framer } from "@/components/common/TabsLayout/lib/framer";

const StepFour = ({ doctorData, patientData, prescriptionData }: any) => {
  const styleForBtn =
    "flex flex-1 border-gray-200 btn border-gray-300 hover:border-gray-300 btn-success join-item text-sm font-semibold leading-6 text-white";
  const printOptions = {
    IsRefer: true,
    IsPrescription: true,
  };

  const printRef = useRef(null);
  const handlePrint = useReactToPrint({
    content: () => printRef.current,
    pageStyle: `
        @page { 
          size: A4; 
          margin: 5mm; 
        }
        body {
          -webkit-print-color-adjust: exact;
        }
        .print-container {
          position: relative;
          width: 100%;
          height: 100%;
        }
        .print-footer {
          content: 'This report generated by DardiBook software';
          position: absolute;
          bottom: 10px;
          left: 0;
          width: 100%;
          text-align: center;
          font-size: 10px;
          color: gray;
        }
        .bg-cover {
          position: fixed;
          top: 0;
          left: 0;
          width: 100%;
          height: 100%;
          background-image: url('/Logo.svg');
          background-size: 60% 60%;
          opacity: 0.1;
          z-index: -1;
        }
        .page-break {
        page-break-before: always;
      }
        .hide-this-compoo{
        display:none;
        }
      `,
    bodyClass: "bg-white",
    documentTitle: `${patientData?.first_name} ${patientData?.last_name}`,
  });

  const [hookProps] = useState({
    tabs: [
      {
        label: "Prescription Report",
        children: <p>hello 1</p>,
        id: "Overview",
      },
      {
        label: "Referral Letter",
        children: <p>hello 2</p>,
        id: "Integrations",
      },
    ],
    initialTabId: "Matches",
  });
  const framer = useTabs(hookProps);

  return (
    <div className="join-item flex flex-col">
      <div className="w-full flex flex-col">
        <div className="w-full items-start justify-center flex px-4 pt-0">
          <Framer.Tabs {...framer.tabProps} />
        </div>

        <div className="pt-10">{framer.selectedTab.children}</div>
      </div>
      <button onClick={handlePrint} className={styleForBtn}>
        Print Prescription
      </button>

      <div ref={printRef}>
        {printOptions?.IsPrescription ? (
          <PrescriptionPrint
            patientInfo={patientData}
            hospitalInfo={doctorData}
            prescriptionInfo={prescriptionData}
          />
        ) : (
          <></>
        )}

        {printOptions?.IsPrescription && printOptions?.IsRefer ? (
          <div className="page-break"></div>
        ) : (
          <></>
        )}
        {printOptions?.IsRefer ? (
          <RefererPrint
            patientInfo={patientData}
            hospitalInfo={doctorData}
            refererInfo={{
              ...prescriptionData?.refer,
              time: prescriptionData?.time,
            }}
          />
        ) : (
          <></>
        )}
      </div>
    </div>
  );
};

export default StepFour;
